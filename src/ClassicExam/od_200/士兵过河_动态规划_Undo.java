package ClassicExam.od_200;

import java.util.*;

public class 士兵过河_动态规划_Undo {

    /**
     * 题目描述
     * 一支N个士兵的军队正在趁夜色逃亡，途中遇到一条湍急的大河。
     * 敌军在T的时长后到达河面，没到过对岸的士兵都会被消灭。
     * 现在军队只找到了1只小船，这船最多能同时坐上2个士兵。
     * <p>
     * 当1个士兵划船过河，用时为 a[i]；0 <= i < N
     * 当2个士兵坐船同时划船过河时，用时为max(a[j],a[i])两士兵中用时最长的。
     * 当2个士兵坐船1个士兵划船时，用时为 a[i]*10；a[i]为划船士兵用时。
     * 如果士兵下河游泳，则会被湍急水流直接带走，算作死亡。
     * 请帮忙给出一种解决方案，保证存活的士兵最多，且过河用时最短。
     * <p>
     * 输入描述
     * 第一行：N 表示士兵数(0<N<1,000,000)
     * 第二行：T 表示敌军到达时长(0 < T < 100,000,000)
     * 第三行：a[0] a[1] … a[i]… a[N- 1]
     * a[i]表示每个士兵的过河时长。
     * (10 < a[i]< 100; 0<= i< N）
     * <p>
     * 输出描述
     * 第一行：”最多存活士兵数” “最短用时”
     */
    public static void main(String[] args) {

        Scanner in = new Scanner(System.in);



    }


}
